{{> _msg }}
<div id="colorlib-container">
    <div class="container">
        <div class="box1">
            <div class="col-md-12" style="padding: 0.5em 0.5em 0 0.5em !important;">
                <div class="row row-pb-md">

                    <div class="col-md-6">
                        <div class="blog-img" style="overflow:hidden;">
                            <img src="{{shop.imageLocation}}" class="img-responsive"
                                alt="{{ shop.name }} Image">
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="desc">
                            <p class="meta">
                                <h1 class="font_color"><b>{{ shop.name }}</b></h1>
                                <span class="food_location"><b>{{ shop.address }}</b></span><br>
                                <span class="food_rating">Rating: <b class="recommended-{{ shop.isRecommended }}">{{ shop.rating }}</b></span>
                                <hr>
                                {{ shop.description }}
                            </p>
                        </div>
                    </div>
                </div><br>
            </div><br>

            <div class="row row-pb-md" style="padding: 0 2em 0 2em !important;">
                <div class="col-md">
                    <div class="blog-entry">
                        <h3 class="font_color"><b>Map</b></h3>
                    </div>
                    <hr>
                    <div id="map"></div>
                </div>
            </div>

            
            

            <div class="row row-pb-md" style="padding: 0 2em 0 2em !important;">
                <div class="col-md">
                    <div class="blog-entry">
                        <h3 class="font_color"><b>Menu</b></h3>
                    </div>
                    <hr>
                </div>
            </div>
            <div class="row row-pb-md">

            {{#each foodItems}}
            <article class="food-journal">
                <header>
                    <div id="vendor-food">
                        <h4 class="font_color" style="margin-bottom: 0; display: inline">
                            <b>{{ this.name }}</b>
                        </h4>
                        {{#if this.isRecommended}}
                            <i class="fas fa-thumbs-up recommended-{{ this.isRecommended }}"></i>
                        {{/if}}
                        <br>
                        <p style="display: inline">(code: {{ this.id }})</p><br>
                        <p>{{ this.calories }} calories <br></p>
                    </div>
                </header>
            </article>
            {{/each}}

            </div>
        </div>
    </div>

    <div class="col-md-12">
        <span>Owned by <i>Vendor - <u><a href="#">vendor@mail.com</a></u></i></span>
        <hr>
    </div>

</div>

<script>
     var shopLatitude = {{{ shop.latitude }}}, shopLongitude = {{{ shop.longitude }}};
     var userLatitude = {{{ user.latitude }}}, userLongitude = {{{ user.longitude }}};

    function initMap() {
        var shopLocation = { lat: shopLatitude, lng: shopLongitude };
        var userLocation = { lat: userLatitude, lng: userLongitude };

        var icon = {
            url: "/images/user-marker.png",
            scaledSize: new google.maps.Size(27, 45),
        };

        var directionsService = new google.maps.DirectionsService();
        var directionsDisplay = new google.maps.DirectionsRenderer({ suppressMarkers: true });       
        var request = {
            origin: userLocation,
            destination: shopLocation,
            travelMode: google.maps.TravelMode.WALKING
        };
        
        var map = new google.maps.Map( document.getElementById('map'), { zoom: 16 } );

        var shopMarker = new google.maps.Marker({ 
                            position: shopLocation, 
                            map: map,
                            label: "S",
                        });
        var userMarker = new google.maps.Marker({ 
                            position: userLocation, 
                            map: map, 
                            icon: icon, 
                        });

        directionsService.route(request, function (response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(response);
                directionsDisplay.setMap(map);
            } else {
                alert("Directions Request from your location to " + "{{{ shop.name }}}" + " failed: " + status);
            }
        });

        var bounds = new google.maps.LatLngBounds();
        bounds.extend(shopMarker.position);
        bounds.extend(userMarker.position);

        map.fitBounds(bounds);
    }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCg3Y-44lgOHZmGOV9TXTDxJ2vb2e2R_Cg&callback=initMap" async defer></script>